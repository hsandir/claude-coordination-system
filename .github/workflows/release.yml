name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        registry-url: 'https://registry.npmjs.org'

    - name: Install dependencies
      run: npm ci

    - name: Run tests
      run: npm test

    - name: Build package
      run: npm run build

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          ## Changes in this Release
          - See [CHANGELOG.md](CHANGELOG.md) for detailed changes
        draft: false
        prerelease: false

    - name: Publish to npm
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: Build Docker image
      run: |
        echo "FROM node:18-alpine" > Dockerfile
        echo "WORKDIR /app" >> Dockerfile
        echo "COPY package*.json ./" >> Dockerfile
        echo "RUN npm ci --only=production" >> Dockerfile
        echo "COPY . ." >> Dockerfile
        echo "RUN chmod +x bin/*.js" >> Dockerfile
        echo "EXPOSE 7777" >> Dockerfile
        echo "CMD [\"node\", \"bin/cli.js\", \"start\"]" >> Dockerfile
        
        docker build -t claude-coordination-system:${{ github.ref_name }} .
        docker tag claude-coordination-system:${{ github.ref_name }} claude-coordination-system:latest

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}

    - name: Push Docker image
      run: |
        docker push claude-coordination-system:${{ github.ref_name }}
        docker push claude-coordination-system:latest